/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1

import (
	v1 "github.com/munnerz/kube-plex/pkg/apis/ptj/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PlexTranscodeJobLister helps list PlexTranscodeJobs.
type PlexTranscodeJobLister interface {
	// List lists all PlexTranscodeJobs in the indexer.
	List(selector labels.Selector) (ret []*v1.PlexTranscodeJob, err error)
	// PlexTranscodeJobs returns an object that can list and get PlexTranscodeJobs.
	PlexTranscodeJobs(namespace string) PlexTranscodeJobNamespaceLister
	PlexTranscodeJobListerExpansion
}

// plexTranscodeJobLister implements the PlexTranscodeJobLister interface.
type plexTranscodeJobLister struct {
	indexer cache.Indexer
}

// NewPlexTranscodeJobLister returns a new PlexTranscodeJobLister.
func NewPlexTranscodeJobLister(indexer cache.Indexer) PlexTranscodeJobLister {
	return &plexTranscodeJobLister{indexer: indexer}
}

// List lists all PlexTranscodeJobs in the indexer.
func (s *plexTranscodeJobLister) List(selector labels.Selector) (ret []*v1.PlexTranscodeJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PlexTranscodeJob))
	})
	return ret, err
}

// PlexTranscodeJobs returns an object that can list and get PlexTranscodeJobs.
func (s *plexTranscodeJobLister) PlexTranscodeJobs(namespace string) PlexTranscodeJobNamespaceLister {
	return plexTranscodeJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PlexTranscodeJobNamespaceLister helps list and get PlexTranscodeJobs.
type PlexTranscodeJobNamespaceLister interface {
	// List lists all PlexTranscodeJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.PlexTranscodeJob, err error)
	// Get retrieves the PlexTranscodeJob from the indexer for a given namespace and name.
	Get(name string) (*v1.PlexTranscodeJob, error)
	PlexTranscodeJobNamespaceListerExpansion
}

// plexTranscodeJobNamespaceLister implements the PlexTranscodeJobNamespaceLister
// interface.
type plexTranscodeJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PlexTranscodeJobs in the indexer for a given namespace.
func (s plexTranscodeJobNamespaceLister) List(selector labels.Selector) (ret []*v1.PlexTranscodeJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PlexTranscodeJob))
	})
	return ret, err
}

// Get retrieves the PlexTranscodeJob from the indexer for a given namespace and name.
func (s plexTranscodeJobNamespaceLister) Get(name string) (*v1.PlexTranscodeJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("plextranscodejob"), name)
	}
	return obj.(*v1.PlexTranscodeJob), nil
}
